C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CARONE
OBJECT MODULE PLACED IN .\Objects\carone.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE carone.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\caro
                    -ne.lst) TABS(2) OBJECT(.\Objects\carone.obj)

line level    source

   1          #include "reg52.h"
   2          #include <intrins.h>
   3           
   4          #define BZ 1
   5          #define XJ 2
   6          #define GS 3
   7           
   8          sfr AUXR = 0x8E;
   9           
  10          //sg90
  11          sbit sg90 = P2^5;
  12          //ultrasonic
  13          sbit Trig = P2^3;
  14          sbit Echo = P2^4;
  15          //oled
  16          sbit scl = P2^6;
  17          sbit sda = P2^7;
  18          //car
  19          sbit left_con1A = P1^1;
  20          sbit left_con2A = P1^2;
  21          sbit right_con1A = P1^3;
  22          sbit right_con2A = P1^4;
  23          //循迹
  24          sbit tracingLeft = P1^5;
  25          sbit tracingRight = P1^6;
  26          //跟随
  27          sbit followLeft = P2^1;
  28          sbit followRight = P2^2;
  29          //su-03t
  30          sbit A25 = P0^1;
  31          sbit A26 = P0^2;
  32          sbit A27 = P0^3;
  33           
  34          int angle;
  35          int angleBack;
  36          int cnt = 0;
  37           
  38          double leftDistance;
  39          double rightDistance;
  40          double middleDistance;
  41           
  42          //OLED的字符构造点阵
  43          const unsigned char code oledFont[]=
  44          {
  45            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
  46            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//! 1
  47            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//" 2
  48            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//# 3
  49            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$ 4
  50            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//% 5
  51            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//& 6
  52            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//' 7
  53            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//( 8
  54            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//) 9
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 2   

  55            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//* 10
  56            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+ 11
  57            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//, 12
  58            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//- 13
  59            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//. 14
  60            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,/// 15
  61            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//0 16
  62            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//1 17
  63            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//2 18
  64            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//3 19
  65            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//4 20
  66            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//5 21
  67            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//6 22
  68            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//7 23
  69            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//8 24
  70            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//9 25
  71            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//: 26
  72            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//; 27
  73            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//< 28
  74            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//= 29
  75            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//> 30
  76            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//? 31
  77            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@ 32
  78            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A 33
  79            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B 34
  80            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C 35
  81            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D 36
  82            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E 37
  83            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F 38
  84            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G 39
  85            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H 40
  86            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I 41
  87            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J 42
  88            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K 43
  89            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L 44
  90            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M 45
  91            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N 46
  92            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O 47
  93            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P 48
  94            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q 49
  95            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R 50
  96            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S 51
  97            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T 52
  98            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U 53
  99            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V 54
 100            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W 55
 101            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X 56
 102            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y 57
 103            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z 58
 104            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[ 59
 105            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\ 60
 106            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//] 61
 107            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^ 62
 108            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_ 63
 109            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//` 64
 110            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a 65
 111            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b 66
 112            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c 67
 113            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d 68
 114            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e 69
 115            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f 70
 116            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g 71
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 3   

 117            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h 72
 118            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i 73
 119            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j 74
 120            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k 75
 121            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l 76
 122            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m 77
 123            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n 78
 124            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o 79
 125            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p 80
 126            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q 81
 127            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r 82
 128            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s 83
 129            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t 84
 130            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u 85
 131            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v 86
 132            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w 87
 133            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x 88
 134            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y 89
 135            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z 90
 136            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{ 91
 137            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//| 92
 138            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//} 93
 139            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~ 94
 140          };
 141           
 142          void Delay5us()   //@11.0592MHz
 143          {
 144   1      }
 145            
 146          void Delay10us()    //@11.0592MHz
 147          {
 148   1        unsigned char i;
 149   1       
 150   1        i = 2;
 151   1        while (--i);
 152   1      }
 153           
 154          void Delay100ms()   //@11.0592MHz
 155          {
 156   1        unsigned char i, j;
 157   1       
 158   1        i = 180;
 159   1        j = 73;
 160   1        do
 161   1        {
 162   2          while (--j);
 163   2        } while (--i);
 164   1      }
 165           
 166          void Delay300ms()   //@11.0592MHz
 167          {
 168   1        unsigned char i, j, k;
 169   1       
 170   1        _nop_();
 171   1        i = 3;
 172   1        j = 26;
 173   1        k = 223;
 174   1        do
 175   1        {
 176   2          do
 177   2          {
 178   3            while (--k);
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 4   

 179   3          } while (--j);
 180   2        } while (--i);
 181   1      }
 182           
 183          void Delay500ms()   //@11.0592MHz
 184          {
 185   1        unsigned char i, j, k;
 186   1       
 187   1        _nop_();
 188   1        i = 4;
 189   1        j = 129;
 190   1        k = 119;
 191   1        do
 192   1        {
 193   2          do
 194   2          {
 195   3            while (--k);
 196   3          } while (--j);
 197   2        } while (--i);
 198   1      }
 199           
 200          //sg90
 201          void timer0Init()
 202          {
 203   1        //设置定时器0为16为计时模式
 204   1        TMOD &=0xF0; 
 205   1        TMOD |=0x01; 
 206   1       
 207   1        //设置定时器0定时时间为0.5ms
 208   1        TH0 = 0xFE;
 209   1        TL0 = 0x33;
 210   1       
 211   1        TR0 = 1;  //定时器0开始计时
 212   1        TF0 = 0;  //不执行定时器0爆表时导致的中断
 213   1       
 214   1        ET0 = 1;  //定时器0中断开关
 215   1        EA = 1;  //总中断开关
 216   1      }
 217           
 218          void sg90Left()
 219          {
 220   1        angle = 5;  //180°
 221   1        if(angleBack != angle){  
 222   2          cnt = 0;
 223   2        }
 224   1        angleBack = angle;
 225   1        Delay100ms();
 226   1      } 
 227           
 228          void sg90Middle()
 229          {
 230   1        angle = 3;  //90°
 231   1        if(angleBack != angle){  
 232   2          cnt = 0;
 233   2        }
 234   1        angleBack = angle;
 235   1        Delay100ms();
 236   1      } 
 237           
 238          void sg90Right()
 239          {
 240   1        angle = 1;  //0°
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 5   

 241   1        if(angleBack != angle){  
 242   2          cnt = 0;
 243   2        }
 244   1        angleBack = angle;
 245   1        Delay100ms();
 246   1      }
 247           
 248          //ultrasonic
 249          void timer1Init()
 250          { 
 251   1        //设置定时器1为16为计时模式
 252   1        TMOD &= 0x0F;
 253   1        TMOD |= 0x10;  
 254   1       
 255   1        TH1 = 0x00;
 256   1        TL1 = 0x00;
 257   1      }
 258           
 259          void ultrasonicStart()
 260          {
 261   1        Trig = 0;
 262   1        Trig = 1;
 263   1        Delay10us();
 264   1        Trig = 0; 
 265   1      }
 266           
 267          double getDistance()
 268          {
 269   1        double time = 0;
 270   1        
 271   1        //定时器1清0
 272   1        TH1 = 0x00;
 273   1        TL1 = 0x00;
 274   1       
 275   1        ultrasonicStart();
 276   1          
 277   1        while(Echo == 0);  //当Echo引脚从低电平跳到高电平时开启定时器1
 278   1        TR1 = 1;
 279   1          
 280   1        while(Echo == 1);  //当Echo引脚从高电平跳到低电平时关闭定时器1
 281   1        TR1 = 0;
 282   1       
 283   1        time = (TH1*256 + TL1) * 1.085;  //微秒
 284   1       
 285   1        return (time * 0.017);
 286   1      }
 287           
 288          //oled
 289          //IIC起始信号
 290          void IIC_start()
 291          {
 292   1        sda = 0;
 293   1        scl = 1;
 294   1        sda = 1;
 295   1        Delay5us();
 296   1        sda = 0;
 297   1        Delay5us();
 298   1        scl = 0;
 299   1      }
 300           
 301          //IIC终止信号
 302          void IIC_stop()
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 6   

 303          {
 304   1        scl = 0;
 305   1        sda = 0;
 306   1        scl = 1;
 307   1        Delay5us();
 308   1        sda = 1;
 309   1        Delay5us();
 310   1        sda = 0;
 311   1      }
 312           
 313          //IIC的ACK应答信号
 314          char IIC_ack()
 315          {
 316   1        char flag;
 317   1       
 318   1        scl = 0;
 319   1        sda = 1;  //在时钟脉冲9期间释放数据线
 320   1        Delay5us();  //延时5微秒后，为读取sda数据做准备
 321   1       
 322   1        scl = 1;  
 323   1        Delay5us();  
 324   1        flag = sda;  //读取数据线,0为应答
 325   1        Delay5us();  
 326   1        
 327   1        scl = 0;
 328   1        Delay5us();
 329   1        return flag;
 330   1      }
 331           
 332          //IIC发送一个字节
 333          void IIC_sendByte(char myData)
 334          {
 335   1        int i;
 336   1        for ( i = 0; i < 8; i++){
 337   2          //发生数据翻转，选择即将发送的是0还是1
 338   2          scl = 0;
 339   2          sda = myData & 0x80;  //获取需要发送字节的最高位到SDA
 340   2          Delay5us();  //数据建立时间
 341   2          
 342   2          //开始发送数据
 343   2          scl = 1;
 344   2          Delay5us();  //数据发送时间
 345   2          
 346   2          scl = 0;  //发送完毕拉低，等待下1bit数据的传输
 347   2          Delay5us();
 348   2          
 349   2          myData = myData << 1;
 350   2        } 
 351   1      }
 352           
 353          //OLED写入一条指令
 354          void oledWriteCmd(char writeCmd)
 355          {
 356   1        IIC_start();
 357   1        IIC_sendByte(0x78);  //选择一个OLED屏，写模式
 358   1        IIC_ack();
 359   1        IIC_sendByte(0x00);  //写入命令，D/C位为0
 360   1        IIC_ack();
 361   1        IIC_sendByte(writeCmd);
 362   1        IIC_ack();
 363   1        IIC_stop();
 364   1      }
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 7   

 365           
 366          //OLED写入一个数据
 367          void oledWriteData(char writeData)
 368          {
 369   1        IIC_start();
 370   1        IIC_sendByte(0x78);  //选择一个OLED屏，写模式
 371   1        IIC_ack();
 372   1        IIC_sendByte(0x40);  //写入命令，D/C位为0
 373   1        IIC_ack();
 374   1        IIC_sendByte(writeData);
 375   1        IIC_ack();
 376   1        IIC_stop();
 377   1      }
 378           
 379          //OLCD初始化
 380          void oledInit()
 381          {
 382   1        oledWriteCmd(0xAE);
 383   1        oledWriteCmd(0x00);
 384   1        oledWriteCmd(0x10);
 385   1        oledWriteCmd(0x40);
 386   1        oledWriteCmd(0xB0);
 387   1        oledWriteCmd(0x81);
 388   1        oledWriteCmd(0xFF);
 389   1        oledWriteCmd(0xA1);
 390   1        oledWriteCmd(0xA6);
 391   1        oledWriteCmd(0xA8);
 392   1        oledWriteCmd(0x3F);
 393   1        oledWriteCmd(0xC8);
 394   1        oledWriteCmd(0xD3);
 395   1        oledWriteCmd(0x00);
 396   1        oledWriteCmd(0xD5);
 397   1        oledWriteCmd(0x80);
 398   1        oledWriteCmd(0xD8);
 399   1        oledWriteCmd(0x05);
 400   1        oledWriteCmd(0xD9);
 401   1        oledWriteCmd(0xF1);
 402   1        oledWriteCmd(0xDA);
 403   1        oledWriteCmd(0x12);
 404   1        oledWriteCmd(0xDB);
 405   1        oledWriteCmd(0x30);
 406   1        oledWriteCmd(0x8D);
 407   1        oledWriteCmd(0x14);
 408   1        oledWriteCmd(0xAF);
 409   1      }
 410           
 411          //OLED清屏函数
 412          void olceClean()
 413          {
 414   1        int i,j;
 415   1        for(i=0;i<8;i++){
 416   2          oledWriteCmd(0xB0 + i);  //选择PAGE
 417   2          //选择PAGE的第0列开始显示
 418   2          oledWriteCmd(0x00);  
 419   2          oledWriteCmd(0x10);
 420   2          for(j = 0;j < 128; j++){
 421   3            oledWriteData(0);  //写入字符0
 422   3          }
 423   2        }
 424   1      }
 425           
 426          //OLED显示一个字符
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 8   

 427          void oledShowByte(char rows,char columns,char oledByte)
 428          { 
 429   1        unsigned int i;
 430   1       
 431   1        //显示字符的上半部分
 432   1        oledWriteCmd(0xb0+(rows*2-2));  //选择行
 433   1        //选择列                        
 434   1        oledWriteCmd(0x00+(columns&0x0f));                          
 435   1        oledWriteCmd(0x10+(columns>>4));      
 436   1        //显示数据                       
 437   1        for(i=((oledByte-32)*16);i<((oledByte-32)*16+8);i++){
 438   2          oledWriteData(oledFont[i]);                            
 439   2        }
 440   1       
 441   1        //显示字符的上半部分
 442   1        oledWriteCmd(0xb0+(rows*2-1));  //选择行  
 443   1        //选择列                    
 444   1        oledWriteCmd(0x00+(columns&0x0f));                          
 445   1        oledWriteCmd(0x10+(columns>>4)); 
 446   1        //显示数据                           
 447   1        for(i=((oledByte-32)*16+8);i<((oledByte-32)*16+8+8);i++){
 448   2          oledWriteData(oledFont[i]);                            
 449   2        }       
 450   1      }
 451           
 452          //OLED显示一个字符串
 453          void oledShowString(char rows,char columns,char *str)
 454          {
 455   1        while(*str != '\0'){
 456   2          oledShowByte(rows,columns,*str);
 457   2          str++;
 458   2          columns += 8;   
 459   2        }       
 460   1      }
 461           
 462          //car
 463          //两个电机反转，前进
 464          void goForward()
 465          {
 466   1        left_con1A = 1;
 467   1        left_con2A = 0;
 468   1        
 469   1        right_con1A = 1;  
 470   1        right_con2A = 0;
 471   1      }
 472           
 473          //两个电机正转，后退
 474          void goBack()
 475          {
 476   1        left_con1A = 0;
 477   1        left_con2A = 1;
 478   1        
 479   1        right_con1A = 0;  
 480   1        right_con2A = 1;
 481   1      }
 482           
 483          //两个电机不转，停止
 484          void goStop()
 485          {
 486   1        left_con1A = 0;
 487   1        left_con2A = 0;
 488   1        
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 9   

 489   1        right_con1A = 0;  
 490   1        right_con2A = 0;
 491   1      }
 492           
 493          //左电机不转，右电机反转，左转
 494          void goLeft()
 495          {
 496   1        left_con1A = 0;
 497   1        left_con2A = 0;
 498   1        
 499   1        right_con1A = 1;  
 500   1        right_con2A = 0;
 501   1      }
 502           
 503          //左电机反转，右电机不转，右转
 504          void goRight()
 505          {
 506   1        left_con1A = 1;
 507   1        left_con2A = 0;
 508   1       
 509   1        right_con1A = 0;  
 510   1        right_con2A = 0;
 511   1      }
 512           
 513          //循迹模式
 514          void tracingMode()
 515          { 
 516   1        if(tracingLeft == 0 && tracingRight == 0){  
 517   2          goForward();
 518   2        }
 519   1       
 520   1        if(tracingLeft == 0 && tracingRight == 1){
 521   2          goRight();
 522   2        }
 523   1       
 524   1        if(tracingLeft == 1 && tracingRight == 0){
 525   2          goLeft();
 526   2        }
 527   1       
 528   1        if(tracingLeft == 1 && tracingRight == 1){
 529   2          goStop();
 530   2        }
 531   1      }
 532           
 533          //跟随模式
 534          void followMode()
 535          { 
 536   1        if(followLeft == 0 && followRight == 0){  //
 537   2          goForward();
 538   2        }
 539   1       
 540   1        if(followLeft == 0 && followRight == 1){
 541   2          goRight();
 542   2        }
 543   1       
 544   1        if(followLeft == 1 && followRight == 0){
 545   2          goLeft();
 546   2        }
 547   1       
 548   1        if(followLeft == 1 && followRight == 1){
 549   2          goStop();
 550   2        }
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 10  

 551   1      }
 552           
 553          //避障模式
 554          void avoidMode()
 555          {
 556   1        sg90Middle();
 557   1          Delay300ms();
 558   1          middleDistance = getDistance();
 559   1          if(middleDistance > 35){
 560   2              goForward();
 561   2          }else{
 562   2              goStop();
 563   2       
 564   2              sg90Left();
 565   2              Delay300ms();
 566   2              leftDistance = getDistance();
 567   2       
 568   2              sg90Middle();
 569   2              Delay300ms();
 570   2       
 571   2              sg90Right();
 572   2              Delay300ms();
 573   2              rightDistance = getDistance();
 574   2       
 575   2              if(leftDistance < 15 && rightDistance < 15){
 576   3                  goBack();
 577   3                  Delay500ms();
 578   3                  goStop();
 579   3              }else{
 580   3       
 581   3                  if(leftDistance > rightDistance){
 582   4                      goLeft();
 583   4                      Delay500ms();
 584   4                      goStop();
 585   4                  }
 586   3       
 587   3                  if(rightDistance > leftDistance){
 588   4                      goRight();
 589   4                      Delay500ms();
 590   4                      goStop();
 591   4                  }
 592   3              }
 593   2          }
 594   1      }
 595           
 596          void main()
 597          {
 598   1        int mark = 0;
 599   1        timer0Init();
 600   1        timer1Init();
 601   1        sg90Middle();
 602   1        Delay500ms();
 603   1        oledInit();
 604   1        olceClean();
 605   1        oledShowString(2,5,"haozige");
 606   1        while(1){
 607   2       
 608   2          if(A25 == 0 && A26 == 1 && A27 == 1){
 609   3            if(mark != GS){
 610   4              olceClean();
 611   4              oledShowString(2,5,"genshuai");
 612   4            }
C51 COMPILER V9.54   CARONE                                                                04/09/2023 20:05:00 PAGE 11  

 613   3            mark = GS;
 614   3            followMode(); 
 615   3          }
 616   2       
 617   2       
 618   2          if(A25 == 1 && A26 == 0 && A27 == 1){
 619   3            if(mark != BZ){
 620   4              olceClean();
 621   4              oledShowString(2,5,"bizhang");
 622   4            }
 623   3            mark = BZ;
 624   3            avoidMode();  
 625   3          }
 626   2       
 627   2          if(A25 == 1 && A26 == 1 && A27 == 0){
 628   3            if(mark != XJ){
 629   4              olceClean();
 630   4              oledShowString(2,5,"xunji");
 631   4            }
 632   3            mark = XJ;
 633   3            tracingMode();  
 634   3          }
 635   2       
 636   2        }
 637   1      }
 638           
 639          //定时器0的中断函数
 640          void Time0Handler() interrupt 1
 641          {
 642   1        
 643   1        TH0 = 0xFE;
 644   1        TL0 = 0x33;
 645   1        cnt++;
 646   1        //控制占空比
 647   1        if(cnt < angle){
 648   2          sg90 = 1;
 649   2        }else{
 650   2          sg90 = 0;
 651   2        }
 652   1       
 653   1        if(cnt == 40){  //每个周期为20ms
 654   2          cnt = 0;
 655   2          sg90 = 1;
 656   2        }
 657   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1392    ----
   CONSTANT SIZE    =   1551    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
