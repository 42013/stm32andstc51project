C51 COMPILER V9.54   CONTROLCAR                                                            04/22/2023 07:58:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CONTROLCAR
OBJECT MODULE PLACED IN .\Objects\controlcar.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE controlcar.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -controlcar.lst) OBJECT(.\Objects\controlcar.obj)

line level    source

   1          #include "reg52.h"
   2          #include <intrins.h>
   3           
   4          sbit IN1 = P1^1;
   5          sbit IN2 = P1^2;
   6          sbit IN3 = P1^3;
   7          sbit IN4 = P1^4;
   8          sbit ENA        =P2^1;
   9          sbit ENB        =P2^2;
  10          sbit left_light = P1^5;
  11          sbit right_light = P1^6;
  12          sbit middle_light=P1^7;
  13          sbit PWM = P2^0;  //设定PWM输出的I/O端口
  14          sbit xhg=P1^0;
  15          unsigned char pwm_left_val;
  16          unsigned char pwm_right_val;
  17          unsigned char pwm_t;
  18          unsigned char count=0;
  19          unsigned char timer1;
  20          unsigned char receiveDate;
  21          unsigned int control=170;
  22          unsigned int normal;
  23          unsigned int change;
  24          
  25          
  26          /*void Delay1000ms()            //@11.0592MHz
  27          {
  28                  unsigned char i, j, k;
  29           
  30                  _nop_();
  31                  i = 8;
  32                  j = 1;
  33                  k = 243;
  34                  do
  35                  {
  36                          do
  37                          {
  38                                  while (--k);
  39                          } while (--j);
  40                  } while (--i);
  41          }*/
  42           void delay1s()   //误差 0us
  43          {
  44   1          unsigned char a,b,c;
  45   1          for(c=167;c>0;c--)
  46   1              for(b=171;b>0;b--)
  47   1                  for(a=16;a>0;a--);
  48   1          _nop_();  //if Keil,require use intrins.h
  49   1      }
  50          void Timer0_Init()              //100微秒@12.000MHz
  51          {
  52   1              TMOD &= 0x00;
  53   1          TMOD |= 0x01; //定时器T0设置成方式1
  54   1       
C51 COMPILER V9.54   CONTROLCAR                                                            04/22/2023 07:58:22 PAGE 2   

  55   1          TH0 = 0xff;   //定时常数 0.1ms 晶振为11.0592MHz
  56   1          TL0 = 0xa4;
  57   1       
  58   1          ET0 = 1;      
  59   1          TR0 = 1; 
  60   1              EA=1; 
  61   1      }
  62          
  63           void goForward()
  64          {
  65   1                      normal=control;
  66   1                      IN1= 0;  IN2=1;
  67   1                      IN3 = 1;        IN4=0;
  68   1              pwm_left_val=normal;
  69   1              pwm_right_val=normal;
  70   1              timer1=12;
  71   1      }
  72          void godown()
  73          {
  74   1              normal=control;
  75   1                      IN1= 1;  IN2=0;
  76   1                      IN3 =0; IN4=1;
  77   1              pwm_left_val=normal;
  78   1              pwm_right_val=normal;
  79   1      }
  80          void gostop()
  81          {
  82   1                      IN1= 0;  IN2=1;
  83   1                      IN3 = 1;        IN4=0;
  84   1                      //timer1=13;
  85   1      }
  86          void go(){
  87   1              IN1= 1;  IN2=0;
  88   1                      IN3 = 0;        IN4=1;
  89   1              normal=control;
  90   1              pwm_left_val=normal;
  91   1              pwm_right_val=normal;
  92   1      }
  93          void go1(){
  94   1              IN1= 1;  IN2=0;
  95   1                      IN3 = 0;        IN4=1;
  96   1              normal=control;
  97   1              pwm_left_val=normal;
  98   1              pwm_right_val=normal;
  99   1              timer1=14;
 100   1      }
 101          void go2(){
 102   1              IN1= 1;  IN2=0;
 103   1                      IN3 = 0;        IN4=1;
 104   1              normal=control;
 105   1              pwm_left_val=normal;
 106   1              pwm_right_val=normal;
 107   1              timer1=9;
 108   1      }
 109          void goright(){
 110   1              IN1= 1;  IN2=0;
 111   1                      IN3 = 0;        IN4=1;
 112   1              change=control+20;
 113   1              normal=control;
 114   1              pwm_left_val=change;
 115   1              pwm_right_val=normal;
 116   1              timer1=10;
C51 COMPILER V9.54   CONTROLCAR                                                            04/22/2023 07:58:22 PAGE 3   

 117   1      }
 118          void goleft(){
 119   1              change=control+20;
 120   1              normal=control;
 121   1                      IN1= 1;  IN2=0;
 122   1                      IN3 = 0;        IN4=1;
 123   1              pwm_left_val=normal;
 124   1              pwm_right_val=change;
 125   1              timer1=13;
 126   1      }
 127          void putleft(){
 128   1              change=control+20;
 129   1              normal=control;
 130   1              IN1= 1;  IN2=0;
 131   1                      IN3 = 0;        IN4=1;
 132   1              pwm_left_val=change+5;
 133   1              pwm_right_val=normal-5;
 134   1              timer1=14;
 135   1      }
 136          void putright(){
 137   1              change=control+20;
 138   1              normal=control;
 139   1                      IN1= 1;  IN2=0;
 140   1                      IN3 = 0;        IN4=1;
 141   1              pwm_left_val=normal-5;
 142   1              pwm_right_val=change+5;
 143   1              timer1=9;
 144   1      }
 145          void moter_add()
 146                  {
 147   1                              control-=10;
 148   1              }
 149          void moter_less()
 150                  {       
 151   1                              control+=10;
 152   1              }
 153                  
 154                  /*void main()        //主函数                             
 155          {       
 156                  Timer0_Init();
 157                  Com_init();//串口初始化和定时器初始化
 158                  while(1){ 
 159                    if(RI==1){     // 判断是否有数据到来
 160                                  receive_data = SBUF; //将收/发数据缓存器SBUF中的数据存入变量
 161                              DateCtrl();                  //调用数据处理函数
 162                              RI = 0;
 163                             }       
 164                } 
 165                          }*/
 166                          void Timer0_Routine() interrupt 1 
 167          {
 168   1                      TR0=0;
 169   1                      TH0 = 0xff;   //定时常数 0.1ms 晶振为11.0592MHz
 170   1                      TL0 = 0xa4;
 171   1                      pwm_t++; 
 172   1                      if(pwm_t==255)
 173   1                                      pwm_t=ENA=ENB=0;
 174   1                      if(pwm_left_val==pwm_t)
 175   1                                      ENA=1;
 176   1                      if(pwm_right_val==pwm_t)
 177   1                                      ENB=1;
 178   1              if(count <= timer1) //5==0° 15==90°
C51 COMPILER V9.54   CONTROLCAR                                                            04/22/2023 07:58:22 PAGE 4   

 179   1              { 
 180   2                      PWM = 1; 
 181   2              }
 182   1              else 
 183   1              { 
 184   2                      PWM = 0; 
 185   2              }
 186   1              count++;
 187   1              if (count >= 200) //T = 20ms清零
 188   1              { 
 189   2                      count = 0; 
 190   2              }
 191   1              TR0 = 1; //开启T0
 192   1      } 
 193          void tracingMode()    
 194          {       
 195   1              if(xhg==1)     //确定是不是真检测到了
 196   1                              {
 197   2                              putleft();
 198   2                              delay1s();
 199   2                              putright();
 200   2                              delay1s();
 201   2                              goForward();
 202   2                              }
 203   1              if(left_light==1&&middle_light==1&&right_light==1)//ȫۚ
 204   1              {
 205   2                      goForward();
 206   2              }
 207   1              if(left_light==0&&middle_light==1&&right_light==0)//ֱП
 208   1              {      
 209   2                      goForward();
 210   2              }
 211   1              if(left_light==1&&middle_light==0&&right_light==0)//ճԒת
 212   1              {
 213   2                      putright();
 214   2                              if(left_light==0&&middle_light==1&&right_light==0)
 215   2                              {
 216   3                              goForward();
 217   3                              }
 218   2              }
 219   1              if(left_light==0&&middle_light==0&&right_light==1)//ճسת
 220   1              {       
 221   2                              putleft();
 222   2                              if(left_light==0&&middle_light==1&&right_light==0)
 223   2                              {
 224   3                                      goForward();
 225   3                              }
 226   2              }
 227   1              if(left_light==1&&middle_light==1&&right_light==0)
 228   1              {
 229   2                              goleft();
 230   2                      if(left_light==0&&middle_light==1&&right_light==0)
 231   2                      {
 232   3                      goForward();
 233   3                      }
 234   2              }
 235   1              if(left_light==0&&middle_light==1&&right_light==1)
 236   1              {
 237   2                      goright();
 238   2                      if(left_light==0&&middle_light==0&&right_light==0)
 239   2                      {
 240   3                              goForward();
C51 COMPILER V9.54   CONTROLCAR                                                            04/22/2023 07:58:22 PAGE 5   

 241   3                      }
 242   2              }
 243   1      }
 244          /*void receive(unsigned char m)
 245          {
 246          switch(m)
 247                          {
 248                                  case(0):        gostop();
 249                                          break;
 250                                  case (1): go();
 251                                          break;                  
 252                                  case (2):       godown(); 
 253                                          break;                                  
 254                                  case (3): goleft();
 255                                          break;
 256                                  case (4): goright();              //right 
 257                                          break;  
 258                                  case (5): moter_add();
 259                                    break;
 260                                  case (6): moter_less();
 261                                    break;
 262                                  case (7): tracingMode();
 263                                    break;
 264                                  case (8): go(); 
 265                                                          left();
 266                                                          break;
 267                                  case (9): go(); 
 268                                                          right();
 269                                                          break;  
 270                          }
 271                  }*/
 272                  void Uart_Init()
 273          {
 274   1               PCON=0x00;
 275   1               SCON=0x50;
 276   1               TMOD |= 0x20;
 277   1              TL1 = 0xFD;             //设定定时初值
 278   1              TH1 = 0xFD;             //设定定时器重装值
 279   1              ET1=0;
 280   1               TR1 = 1;
 281   1               EA = 1;
 282   1               ES = 1;   
 283   1      }
 284          void Uart_Routine() interrupt 4
 285          { 
 286   1              gostop();
 287   1              if(RI)
 288   1              {
 289   2              SBUF=receiveDate;
 290   2              receiveDate=SBUF;       
 291   2              RI=0;
 292   2              }
 293   1              if(TI)
 294   1              {
 295   2              TI=0;
 296   2              }
 297   1      }
 298          void main()
 299          {       
 300   1              Timer0_Init();
 301   1              Uart_Init();
 302   1              while(1)
C51 COMPILER V9.54   CONTROLCAR                                                            04/22/2023 07:58:22 PAGE 6   

 303   1              {
 304   2              //receive(receiveDate);
 305   2              if(receiveDate==0)
 306   2              {
 307   3                      gostop();
 308   3              }else if(receiveDate==1)
 309   2              {
 310   3                      go();
 311   3              }else if(receiveDate==2)
 312   2              {
 313   3                      godown();
 314   3              }else if(receiveDate==3)
 315   2              { 
 316   3                      timer1=8;
 317   3              }else if(receiveDate==4)
 318   2              {
 319   3                      timer1=14;
 320   3              }else if(receiveDate==5)
 321   2              {
 322   3              timer1=11;      
 323   3              moter_add();
 324   3              }else if(receiveDate==6)
 325   2              {
 326   3                      timer1=11;
 327   3                      moter_less();
 328   3              }else if(receiveDate==7)
 329   2              {
 330   3              tracingMode();
 331   3              }
 332   2              }
 333   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    679    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
