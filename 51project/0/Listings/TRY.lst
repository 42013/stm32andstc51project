C51 COMPILER V9.54   TRY                                                                   03/25/2023 15:49:54 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TRY
OBJECT MODULE PLACED IN .\Objects\TRY.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE TRY.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\TRY.lst
                    -) TABS(2) OBJECT(.\Objects\TRY.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <intrins.h>
   3          sbit BEEP = P2^5;
   4           
   5          unsigned char expected[] = {0x55, 0x00, 0x03, 0x11, 0x00, 0xec};
   6          //unsigned char a;
   7           unsigned int  flag;
   8          unsigned int ms=1000,i;
   9          void Delay(unsigned int xms)    //@12.000MHz
  10          {
  11   1        unsigned char i, j;
  12   1      while(xms--){
  13   2        i = 2;
  14   2        j = 239;
  15   2        do
  16   2        {
  17   3          while (--j);
  18   3        } while (--i);
  19   2      }
  20   1      }
  21          
  22          /*void UartInit(void)   //4800bps@11.0592MHz
  23          {
  24            PCON |= 0x80;   //使能波特率倍速位SMOD
  25            SCON = 0x50;    //8位数据,可变波特率
  26            TMOD &= 0x0F;   //清除定时器1模式位
  27            TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  28            TL1 = 0xF4;   //设定定时初值
  29            TH1 = 0xF4;   //设定定时器重装值
  30            ET1 = 0;    //禁止定时器1中断
  31            TR1 = 1;    //启动定时器1
  32          }*/
  33          void Buzzer_Delay()  //@12.000MHz
  34          {
  35   1       unsigned char i;
  36   1        _nop_  ();
  37   1       i = 80;
  38   1       while (--i);
  39   1      }
  40            void UART_Init()  //9600bps@12.000MHz
  41          {
  42   1        PCON |= 0x80;   //使能波特率倍速位SMOD
  43   1        SCON = 0x50;    //8位数据,可变波特率
  44   1        TMOD &= 0x0F;   //清除定时器1模式位
  45   1        TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  46   1        TL1 = 0xFD;   //设定定时初值
  47   1        TH1 = 0xFD;   //设定定时器重装值
  48   1        ET1 = 0;    //禁止定时器1中断
  49   1        TR1 = 1;    //启动定时器1
  50   1        EA=1;
  51   1        ES=1;
  52   1      }
  53          unsigned char Nixietable[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
  54          
C51 COMPILER V9.54   TRY                                                                   03/25/2023 15:49:54 PAGE 2   

  55          void Nixie(unsigned char location,unsigned char number){
  56   1        switch(location){
  57   2          case 1:P2_4=1;P2_3=1;P2_2=1; break;
  58   2          case 2:P2_4=1;P2_3=1;P2_2=0; break;
  59   2          case 3:P2_4=1;P2_3=0;P2_2=1; break;
  60   2          case 4:P2_4=1;P2_3=0;P2_2=0; break;
  61   2          case 5:P2_4=0;P2_3=1;P2_2=1; break;
  62   2          case 6:P2_4=0;P2_3=1;P2_2=0; break;
  63   2          case 7:P2_4=0;P2_3=0;P2_2=1; break;
  64   2          case 8:P2_4=0;P2_3=0;P2_2=0; break;
  65   2        }
  66   1        P0=Nixietable[number];
  67   1        Delay(800);
  68   1        P0=0x00;
  69   1      }
  70          /*void UART_SendByte(unsigned char Byte)
  71          {
  72            SBUF=Byte;
  73            while(TI==0);
  74            TI=0;
  75          }*/
  76          
  77          void main()
  78          {
  79   1        char data_msg = 'a';
  80   1        UART_Init();
  81   1        while(1)
  82   1        {
  83   2          Delay(1000);
  84   2          SBUF = data_msg;
  85   2        }
  86   1      }
  87          /*void UART_Routine() interrupt 4
  88          {
  89            if(RI==1)
  90              {
  91                if(P3_0==0){
  92                  SBUF=0xF0;
  93                P2=~SBUF;
  94              for(i=0;i<ms*0.5;i++)
  95             {
  96             BEEP=!BEEP;
  97             Buzzer_Delay();
  98               Delay(1000);
  99               Nixie(1,2);
 100             } 
 101           }
 102          }
 103          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
